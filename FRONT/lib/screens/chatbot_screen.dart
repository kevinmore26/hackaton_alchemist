import 'package:flutter/material.dart';
import 'package:ikchatbot/ikchatbot.dart';
import 'package:http/http.dart' as http;
import 'dart:convert';

final List<String> keywords = [
  'qui√©n eres',
  'qu√© es RIMAC',
  'gracias',
  'adi√≥s',
  'qu√© seguros ofrecen',
  'seguro de salud',
  'seguro de auto',
  'seguro de hogar',
  'seguro de vida',
  'c√≥mo reclamar un seguro',
  'contactar soporte',
  'ubicaci√≥n',
  'me siento triste',
  'ansiedad',
  'estr√©s',
  'bienestar mental',
  'quiero hablar con alguien',
  'recomendaciones de salud'
];

final List<String> responses = [
  'Soy un chatbot creado por DATA ALCHEMIST para asistirte con los servicios de RIMAC Seguros.',
  'RIMAC es una de las compa√±√≠as de seguros m√°s grandes de Per√∫, ofreciendo una amplia gama de productos y servicios de seguros.',
  '¬°De nada!',
  '¬°Adi√≥s! ¬°Que tengas un buen d√≠a!',
  'Ofrecemos una variedad de seguros, incluyendo seguros de salud, seguros de auto, seguros de hogar y seguros de vida. ¬øEn qu√© puedo ayudarte?',
  'Nuestros planes de seguro de salud cubren una amplia gama de servicios m√©dicos y tratamientos. ¬øTe gustar√≠a m√°s detalles?',
  'Nuestras p√≥lizas de seguro de auto proporcionan una cobertura integral para tu veh√≠culo. ¬øTe gustar√≠a saber m√°s?',
  'Ofrecemos seguros de hogar para proteger tu casa y tus pertenencias. ¬øTe gustar√≠a m√°s informaci√≥n?',
  'Nuestras p√≥lizas de seguro de vida est√°n dise√±adas para brindar seguridad financiera a tus seres queridos. ¬øTe gustar√≠a m√°s detalles?',
  'Para reclamar un seguro, por favor visita nuestro sitio web y llena el formulario de reclamaci√≥n. Para m√°s ayuda, puedes contactar a nuestro equipo de soporte.',
  'Puedes contactar a nuestro equipo de soporte en soporte@rimac.com o llamarnos al (01) 411-1111.',
  'Nuestra oficina principal est√° ubicada en Av. Paseo de la Rep√∫blica 3505, Lima, Per√∫.',
  'Lamento que te sientas triste. Es importante hablar con alguien de confianza. ¬øTe gustar√≠a recomendaciones para sentirte mejor?',
  'La ansiedad puede ser muy dif√≠cil de manejar. Considera t√©cnicas de relajaci√≥n como la meditaci√≥n o el ejercicio. Si necesitas hablar con alguien, estamos aqu√≠ para ayudarte.',
  'El estr√©s es com√∫n, pero hay muchas maneras de manejarlo. Intenta realizar actividades que disfrutes o habla con un profesional de salud mental.',
  'El bienestar mental es muy importante. Te recomendamos cuidar tu salud f√≠sica, mantener conexiones sociales y buscar ayuda profesional si es necesario.',
  'Entiendo que quieras hablar con alguien. Puedes contactar a nuestro equipo de soporte para recibir la ayuda que necesitas.',
  'Para mejorar tu salud, te recomendamos mantener una dieta equilibrada, hacer ejercicio regularmente y realizar chequeos m√©dicos peri√≥dicos.'
];

class ChatbotScreen extends StatelessWidget {
  final chatBotConfig = IkChatBotConfig(
    // Configuraci√≥n del rating por correo SMTP
    ratingIconYes: const Icon(Icons.star),
    ratingIconNo: const Icon(Icons.star_border),
    ratingIconColor: Colors.black,
    ratingBackgroundColor: Colors.white,
    ratingButtonText: 'Enviar calificaci√≥n',
    thankyouText: '¬°Gracias por tu calificaci√≥n!',
    ratingText: 'Califica tu experiencia:',
    ratingTitle: '¬°Gracias por usar el chatbot!',
    body: 'Este es un correo de prueba enviado desde Flutter y Dart.',
    subject: 'Prueba de calificaci√≥n',
    recipient: 'recipient@example.com',
    isSecure: false,
    senderName: 'Tu Nombre',
    smtpUsername: 'Tu Email',
    smtpPassword: 'Tu contrase√±a',
    smtpServer: 'smtp.gmail.com',
    smtpPort: 587,
    // Configuraci√≥n del sistema
    sendIcon: const Icon(Icons.send, color: Colors.black),
    userIcon: const Icon(Icons.animation, color: Colors.white),
    botIcon: const Icon(Icons.android, color: Colors.white),
    botChatColor: Color.fromARGB(114, 187, 11, 227),
    delayBot: 100,
    closingTime: 1,
    delayResponse: 1,
    userChatColor: Color(0xFFf7052d),
    waitingTime: 1,
    keywords: keywords,
    responses: responses,
    backgroundColor: Colors.white,
    backgroundImage:
        'https://i.pinimg.com/736x/d2/bf/d3/d2bfd3ea45910c01255ae022181148c4.jpg',
    backgroundAssetimage: 'lib/assets/bg.jpeg',
    initialGreeting: "üëã ¬°Hola! \nBienvenido a RIMAC ChatBot.\n¬øC√≥mo puedo ayudarte hoy?",
    defaultResponse: "Lo siento, no entend√≠ tu respuesta.",
    inactivityMessage: "¬øHay algo m√°s en lo que pueda ayudarte?",
    closingMessage: "Esta conversaci√≥n se cerrar√° ahora.",
    inputHint: 'Env√≠a un mensaje',
    waitingText: 'Por favor espera...',
    useAsset: false,
  );

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        centerTitle: true,
        title: const Text('RIMAC Chatbot'),
      ),
      body: ikchatbot(config: chatBotConfig),
    );
  }
}

// Funci√≥n para interactuar con la API de Ollama
Future<String> fetchOllamaResponse(String prompt) async {
  const url = 'http://localhost:11434/api/chat';
  const headers = {'Content-Type': 'application/json'};
  final body = jsonEncode({
    "model": "crewai-llama2",
    "messages": [
      {
        "role": "user",
        "content": prompt
      }
    ],
    "stream": false
  });

  final response = await http.post(Uri.parse(url), headers: headers, body: body);

  if (response.statusCode == 200) {
    final responseData = jsonDecode(response.body);
    return responseData['message']; // Ajusta esto seg√∫n la estructura de tu respuesta
  } else {
    throw Exception('Failed to fetch response from Ollama API');
  }
}
